package fr.formation.afpa.domain;
// Generated 6 avr. 2021 10:16:04 by Hibernate Tools 5.1.10.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Employee generated by hbm2java
 */
@Entity
@Table(name = "employee", catalog = "bd")
public class Employee implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -7323583784802108669L;
	private Integer empId;
	private Branch branch;
	private Department department;
	private Employee employee;
	private Date endDate;
	private String firstName;
	private String lastName;
	private Date startDate;
	private String title;
	private Set<Employee> employees = new HashSet<Employee>(0);
	private Set<Employee> employees_1 = new HashSet<Employee>(0);
	public Compte compte;
	
	public Employee() {
	}

	public Employee(String firstName, String lastName, Date startDate) {
		this.firstName = firstName;
		this.lastName = lastName;
		this.startDate = startDate;
	}

	public Employee(Branch branch, Department department, Employee employee, Date endDate, String firstName,
			String lastName, Date startDate, String title, 			Set<Employee> employees, Set<Employee> employees_1) {
		this.branch = branch;
		this.department = department;
		this.employee = employee;
		this.endDate = endDate;
		this.firstName = firstName;
		this.lastName = lastName;
		this.startDate = startDate;
		this.title = title;
		this.employees = employees;
		this.employees_1 = employees_1;
	}
	
	@Override
	public String toString() {
		return "Employé-e "+firstName + " " + lastName + " embauché-e le "+ startDate;
	}

	
	@Id
@GeneratedValue(strategy=GenerationType.IDENTITY)
	@Column(name="EMP_ID")
	public Integer getEmpId() {
		return this.empId;
	}

	public void setEmpId(Integer empId) {
		this.empId = empId;
	}
	
	//OK
	@OneToOne(mappedBy = "employee")
	public Compte getCompte() {
		return compte;
	}
	
	
	//22  Referenced property not a (One|Many)ToOne: fr.formation.afpa.domain.Compte.employee in 
		//mappedBy of fr.formation.afpa.domain.Employee.compte
//	@OneToOne(mappedBy = "employee")
//	@JoinColumn(name="EMP_ID")
//	public Compte getCompte() {
//		return compte;
//	}

	public void setCompte(Compte compte) {
		this.compte = compte;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ASSIGNED_BRANCH_ID")
	public Branch getBranch() {
		return this.branch;
	}

	public void setBranch(Branch branch) {
		this.branch = branch;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DEPT_ID")
	public Department getDepartment() {
		return this.department;
	}

	public void setDepartment(Department department) {
		this.department = department;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SUPERIOR_EMP_ID")
	public Employee getEmployee() {
		return this.employee;
	}

	public void setEmployee(Employee employee) {
		this.employee = employee;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "END_DATE", length = 10)
	public Date getEndDate() {
		return this.endDate;
	}

	public void setEndDate(Date endDate) {
		this.endDate = endDate;
	}

	@Column(name = "FIRST_NAME", nullable = false, length = 20)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "LAST_NAME", nullable = false, length = 20)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "START_DATE", nullable = false, length = 10)
	public Date getStartDate() {
		return this.startDate;
	}

	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	@Column(name = "TITLE", length = 20)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}


	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employee")
	public Set<Employee> getEmployees() {
		return this.employees;
	}

	public void setEmployees(Set<Employee> employees) {
		this.employees = employees;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employee")
	public Set<Employee> getEmployees_1() {
		return this.employees_1;
	}

	public void setEmployees_1(Set<Employee> employees_1) {
		this.employees_1 = employees_1;
	}

}
